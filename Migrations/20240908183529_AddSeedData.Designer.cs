// <auto-generated />
using System;
using InvestmentGameAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestmentGameAPI.Migrations
{
    [DbContext(typeof(InvestmentDbContext))]
    [Migration("20240908183529_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvestmentGameAPI.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CurrentStockPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MarketCap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TotalShares")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentStockPrice = 100.5m,
                            MarketCap = 100500m,
                            Name = "Company A",
                            RowVersion = new byte[0],
                            TotalShares = 1000
                        },
                        new
                        {
                            Id = 2,
                            CurrentStockPrice = 200.0m,
                            MarketCap = 400000m,
                            Name = "Company B",
                            RowVersion = new byte[0],
                            TotalShares = 2000
                        },
                        new
                        {
                            Id = 3,
                            CurrentStockPrice = 300.0m,
                            MarketCap = 450000m,
                            Name = "Company C",
                            RowVersion = new byte[0],
                            TotalShares = 1500
                        });
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.InGameItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("InGameItems");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.UserCompanyOwnership", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfShares")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCompanyOwnerships");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.UserItemOwnership", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("UserItemOwnerships");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.UserCompanyOwnership", b =>
                {
                    b.HasOne("InvestmentGameAPI.Models.Company", "Company")
                        .WithMany("UserCompanyOwnerships")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentGameAPI.Models.User", "User")
                        .WithMany("UserCompanyOwnerships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.UserItemOwnership", b =>
                {
                    b.HasOne("InvestmentGameAPI.Models.InGameItem", "InGameItem")
                        .WithMany("UserItemOwnerships")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentGameAPI.Models.User", "User")
                        .WithMany("UserItemOwnerships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InGameItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.Company", b =>
                {
                    b.Navigation("UserCompanyOwnerships");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.InGameItem", b =>
                {
                    b.Navigation("UserItemOwnerships");
                });

            modelBuilder.Entity("InvestmentGameAPI.Models.User", b =>
                {
                    b.Navigation("UserCompanyOwnerships");

                    b.Navigation("UserItemOwnerships");
                });
#pragma warning restore 612, 618
        }
    }
}
